[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-dev-tool"
version = "0.1.0"
description = "AI Dev Tool - System Development Support Tool using Gemini/Claude CLI"
readme = "README.md"
authors = [
    {name = "AI Dev Team", email = "dev@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Quality Assurance",
]
requires-python = ">=3.12"
dependencies = [
    "click==8.1.7",
    "python-pptx==1.0.2",
    "openpyxl==3.1.5",
    "pandas==2.2.3",
    "python-docx==1.1.2",
    "PyPDF2==3.0.1",
    "markdown==3.7",
    "chardet==5.2.0",
    "pydantic==2.10.3",
    "PyYAML==6.0.2",
    "python-dotenv==1.0.1",
    "jsonschema==4.23.0",
    "rich==13.9.4",
    "tabulate==0.9.0",
    "jinja2==3.1.4",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.4",
    "pytest-asyncio==0.24.0",
    "pytest-mock==3.14.0",
    "black==24.10.0",
    "ruff==0.8.2",
    "mypy==1.13.0",
    "types-PyYAML",
    "types-tabulate",
]

[project.scripts]
ai-dev = "ai_dev.cli:cli"

[project.urls]
Homepage = "https://github.com/yourusername/ai-dev-tool"
Documentation = "https://github.com/yourusername/ai-dev-tool/wiki"
Repository = "https://github.com/yourusername/ai-dev-tool"
Issues = "https://github.com/yourusername/ai-dev-tool/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["ai_dev*"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true